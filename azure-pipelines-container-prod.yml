trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  acrLoginServer: 'fcregistry.azurecr.io'
  imageRepository: 'fiapcloudgames'
  containerTag: '$(Build.BuildId)'
  azureSubscription: 'sc-fiapcloudgames'
  webAppName: 'fiapcloudgames-app'
  solution: '**/*.sln'
  buildConfiguration: 'Release'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: Docker
    displayName: Build and Push
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: '$(acrLoginServer)'

    - task: Docker@2
      displayName: Build Image
      inputs:
        command: build
        repository: $(imageRepository)
        Dockerfile: 'Dockerfile'
        tags: |
          $(containerTag)
          latest

    - task: Docker@2
      displayName: Push Image
      inputs:
        command: push
        repository: $(imageRepository)
        tags: |
          $(containerTag)
          latest

- stage: Deploy
  displayName: Deploy to App Service
  dependsOn: BuildAndPush
  jobs:
  - deployment: DeployToAppService
    environment: 'fiapcloudgames-prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: Deploy to Web App for Containers
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              containers: |
                $(acrLoginServer)/$(imageRepository):$(containerTag)

          - script: |
              echo Swagger UI dispon√≠vel em:
              echo https://fiapcloudgames-app-dhegb3cbcugshddk.brazilsouth-01.azurewebsites.net/swagger/index.html
            displayName: Exibir URL do Swagger
