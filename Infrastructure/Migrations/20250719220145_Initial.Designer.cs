// <auto-generated />
using System;
using Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250719220145_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("VARCHAR(400)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Jogo", (string)null);
                });

            modelBuilder.Entity("Core.Entity.JogosPromocoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT");

                    b.Property<int>("PromocaoId")
                        .HasColumnType("INT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("PromocaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("JogosPromocoes", (string)null);
                });

            modelBuilder.Entity("Core.Entity.LogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Exception")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Level")
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Message")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Promocao", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NivelAcesso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Core.Entity.UsuarioJogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<int>("JogoId")
                        .HasColumnType("INT");

                    b.Property<decimal>("PrecoDaCompra")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<int?>("PromocaoId")
                        .HasColumnType("INT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("PromocaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioJogo", (string)null);
                });

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("Jogos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.JogosPromocoes", b =>
                {
                    b.HasOne("Core.Entity.Jogo", "Jogo")
                        .WithMany("JogosPromocoes")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entity.Promocao", "Promocao")
                        .WithMany("JogosPromocoes")
                        .HasForeignKey("PromocaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("JogosPromocoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Promocao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.Promocao", b =>
                {
                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("Promocoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.UsuarioJogo", b =>
                {
                    b.HasOne("Core.Entity.Jogo", "Jogo")
                        .WithMany("UsuarioJogos")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entity.Promocao", "Promocao")
                        .WithMany("UsuarioJogos")
                        .HasForeignKey("PromocaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Core.Entity.Usuario", "Usuario")
                        .WithMany("UsuarioJogos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Promocao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Entity.Jogo", b =>
                {
                    b.Navigation("JogosPromocoes");

                    b.Navigation("UsuarioJogos");
                });

            modelBuilder.Entity("Core.Entity.Promocao", b =>
                {
                    b.Navigation("JogosPromocoes");

                    b.Navigation("UsuarioJogos");
                });

            modelBuilder.Entity("Core.Entity.Usuario", b =>
                {
                    b.Navigation("Jogos");

                    b.Navigation("JogosPromocoes");

                    b.Navigation("Promocoes");

                    b.Navigation("UsuarioJogos");
                });
#pragma warning restore 612, 618
        }
    }
}
